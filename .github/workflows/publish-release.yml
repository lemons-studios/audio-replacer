name: "Publish Audio Replacer (.deb, .exe, .msi)"

on:
  push:
    branches:
      - release
  workflow_dispatch:

jobs:
  publish-audio-replacer:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "ubuntu-22.04"
            args: ""
          - platform: "windows-2025"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install dependencies (Windows)
        if: matrix.platform == 'windows-2025'
        run: |
          powershell
          Set-ExecutionPolicy Unrestricted -Force

          winget source remove msstore
          winget install Kitware.CMake -v 3.30.5 --disable-interactivity --accept-source-agreements --accept-package-agreements
          winget install --id=Microsoft.EdgeWebView2Runtime -e

      - name: install dependencies (Ubuntu)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf cmake llvm clang xdg-utils
      
      - name: install frontend dependencies
        run: npm install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          TAURI_SIGNING_PRIVATE_KEY: ${{secrets.AUDIO_REPLACER_PRIVATE_KEY}}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{secrets.AUDIO_REPLACER_PRIVATE_KEY_PASSWORD}}
        with:
          tagName: __VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "__VERSION__"
          releaseBody: "see release for more details"
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
